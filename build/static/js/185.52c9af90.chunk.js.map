{"version":3,"file":"static/js/185.52c9af90.chunk.js","mappings":"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","sources":["services/integration/webhookService.js","components/integration/WebhookPanel.jsx"],"sourcesContent":["/**\n * Serviço de Webhooks para integração com sistemas externos\n * \n * NOTA: FUNCIONALIDADE FUTURA\n * Este módulo será implementado em uma versão posterior e está desativado\n * para os testes iniciais. O serviço de webhooks permitirá integração com sistemas\n * externos quando eventos específicos ocorrem, como novas mensagens, alterações de\n * configuração ou outros eventos importantes.\n */\n\n// Tipos de eventos suportados pelo serviço de webhook\nconst WEBHOOK_EVENT_TYPES = {\n  MESSAGE_RECEIVED: 'message.received',\n  MESSAGE_SENT: 'message.sent',\n  SYNC_COMPLETED: 'sync.completed',\n  USER_ACTIVITY: 'user.activity',\n  PRIVACY_CHANGED: 'privacy.changed',\n  SECURITY_ALERT: 'security.alert',\n  APP_STATUS_CHANGED: 'app_status_changed',\n  CUSTOM: 'custom'\n};\n\n// Exportando como EVENT_TYPES para compatibilidade com componentes existentes\nexport const EVENT_TYPES = WEBHOOK_EVENT_TYPES;\n\n/**\n * Serviço de gerenciamento de webhooks - Desativado para testes iniciais\n * V1.0 - Será implementado em versões futuras\n */\nconst webhookService = {\n  /**\n   * Inicializa o serviço (atualmente desativado)\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    console.log('[INFO] Serviço de webhooks estará disponível em uma versão futura');\n    return Promise.resolve();\n  },\n  \n  /**\n   * Obtém os webhooks configurados\n   * @returns {Promise<Array>} Lista de webhooks\n   */\n  async getWebhooks() {\n    return Promise.resolve([]);\n  },\n  \n  /**\n   * Adiciona um novo webhook (desativado)\n   * @param {Object} webhook - Configuração do webhook\n   * @returns {Promise<Object>} Webhook adicionado\n   */\n  async addWebhook(webhook) {\n    console.log('[INFO] Adição de webhooks não disponível nesta versão');\n    return Promise.resolve({\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString(),\n      status: 'disabled',\n      ...webhook\n    });\n  },\n  \n  /**\n   * Atualiza um webhook existente (desativado)\n   * @param {string} webhookId - ID do webhook\n   * @param {Object} updates - Atualizações\n   * @returns {Promise<Object|null>} Webhook atualizado ou null se não encontrado\n   */\n  async updateWebhook(webhookId, updates) {\n    console.log('[INFO] Atualização de webhooks não disponível nesta versão');\n    return Promise.resolve(null);\n  },\n  \n  /**\n   * Remove um webhook (desativado)\n   * @param {string} webhookId - ID do webhook\n   * @returns {Promise<boolean>} Sucesso da operação\n   */\n  async deleteWebhook(webhookId) {\n    console.log('[INFO] Remoção de webhooks não disponível nesta versão');\n    return Promise.resolve(true);\n  },\n  \n  /**\n   * Dispara um evento para todos os webhooks configurados para esse tipo (desativado)\n   * @param {string} eventType - Tipo de evento\n   * @param {Object} payload - Dados do evento\n   * @returns {Promise<Array>} Resultados dos disparos\n   */\n  async triggerEvent(eventType, payload) {\n    console.log(`[INFO] Disparo de eventos (${eventType}) não disponível nesta versão`);\n    return Promise.resolve([]);\n  },\n  \n  /**\n   * Obtém logs de execução de webhooks (desativado)\n   * @returns {Promise<Array>} Logs de execução\n   */\n  async getLogs() {\n    return Promise.resolve([]);\n  },\n  \n  /**\n   * Limpa logs de execução (desativado)\n   * @returns {Promise<boolean>} Sucesso da operação\n   */\n  async clearLogs() {\n    return Promise.resolve(true);\n  },\n  \n  /**\n   * Testa um webhook (desativado)\n   * @param {string} webhookId - ID do webhook\n   * @returns {Promise<Object>} Resultado do teste\n   */\n  async testWebhook(webhookId) {\n    console.log('[INFO] Teste de webhooks não disponível nesta versão');\n    return Promise.resolve({\n      success: false,\n      error: 'Funcionalidade não disponível nesta versão',\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\nexport default webhookService;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport webhookService, { EVENT_TYPES } from '../../services/integration/webhookService';\n\n/**\n * Painel de gerenciamento de webhooks e integrações\n */\nconst WebhookPanel = () => {\n  const [webhooks, setWebhooks] = useState([]);\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [selectedService, setSelectedService] = useState('');\n  const [quickSetupUrl, setQuickSetupUrl] = useState('');\n  const [newWebhook, setNewWebhook] = useState({\n    name: '',\n    url: '',\n    eventTypes: [],\n    headers: {}\n  });\n  const [showLogs, setShowLogs] = useState(false);\n\n  // Inicializa o componente\n  useEffect(() => {\n    const initialize = async () => {\n      await webhookService.initialize();\n      await loadData();\n    };\n    initialize();\n  }, []);\n\n  // Carrega dados de webhooks e logs\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [webhooksList, logsList] = await Promise.all([\n        webhookService.getWebhooks(),\n        webhookService.getLogs(25)\n      ]);\n      \n      setWebhooks(webhooksList);\n      setLogs(logsList);\n    } catch (error) {\n      console.error('Erro ao carregar dados de webhooks:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Manipula adição de webhook\n  const handleAddWebhook = async (e) => {\n    e.preventDefault();\n    \n    if (!newWebhook.url || !newWebhook.name || newWebhook.eventTypes.length === 0) {\n      alert('Preencha todos os campos obrigatórios');\n      return;\n    }\n    \n    try {\n      await webhookService.addWebhook(newWebhook);\n      setNewWebhook({\n        name: '',\n        url: '',\n        eventTypes: [],\n        headers: {}\n      });\n      setShowAddForm(false);\n      await loadData();\n    } catch (error) {\n      console.error('Erro ao adicionar webhook:', error);\n      alert('Não foi possível adicionar o webhook.');\n    }\n  };\n\n  // Configura webhook rápido\n  const handleQuickSetup = async () => {\n    if (!selectedService || !quickSetupUrl) {\n      alert('Selecione um serviço e forneça a URL/token');\n      return;\n    }\n    \n    try {\n      await webhookService.quickSetup(selectedService, quickSetupUrl);\n      setSelectedService('');\n      setQuickSetupUrl('');\n      await loadData();\n    } catch (error) {\n      console.error('Erro na configuração rápida:', error);\n      alert(`Erro: ${error.message || 'Não foi possível configurar a integração'}`);\n    }\n  };\n\n  // Manipula alteração de status do webhook\n  const handleToggleStatus = async (webhookId) => {\n    const webhook = webhooks.find(wh => wh.id === webhookId);\n    if (!webhook) return;\n    \n    const newStatus = webhook.status === 'active' ? 'inactive' : 'active';\n    \n    try {\n      await webhookService.updateWebhook(webhookId, { status: newStatus });\n      await loadData();\n    } catch (error) {\n      console.error('Erro ao atualizar status:', error);\n    }\n  };\n\n  // Manipula exclusão de webhook\n  const handleDeleteWebhook = async (webhookId) => {\n    if (!confirm('Tem certeza que deseja excluir este webhook?')) return;\n    \n    try {\n      await webhookService.deleteWebhook(webhookId);\n      await loadData();\n    } catch (error) {\n      console.error('Erro ao excluir webhook:', error);\n    }\n  };\n\n  // Testa um webhook\n  const handleTestWebhook = async (webhookId) => {\n    try {\n      const result = await webhookService.testWebhook(webhookId);\n      \n      if (result.success) {\n        alert('Teste enviado com sucesso!');\n      } else {\n        alert(`Erro no teste: ${result.error}`);\n      }\n      \n      await loadData(); // Recarrega para mostrar o log do teste\n    } catch (error) {\n      console.error('Erro ao testar webhook:', error);\n      alert('Não foi possível testar o webhook.');\n    }\n  };\n\n  // Manipula alteração de valor dos campos do formulário\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewWebhook(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Manipula alteração de tipos de eventos\n  const handleEventTypeChange = (e) => {\n    const { value, checked } = e.target;\n    \n    setNewWebhook(prev => {\n      const eventTypes = checked\n        ? [...prev.eventTypes, value]\n        : prev.eventTypes.filter(type => type !== value);\n      \n      return { ...prev, eventTypes };\n    });\n  };\n\n  // Dispara um evento (simulação para teste)\n  const handleTriggerEvent = async (eventType) => {\n    try {\n      // Dados de exemplo para cada tipo de evento\n      const payload = {\n        [EVENT_TYPES.CALL_BLOCKED]: {\n          phoneNumber: '(11) 98765-4321',\n          reason: 'Número bloqueado por regra',\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.CALL_SILENCED]: {\n          phoneNumber: '(11) 98765-4321',\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.RULE_TRIGGERED]: {\n          ruleId: 'rule_123',\n          ruleName: 'Bloqueio Noturno',\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.PROFILE_ACTIVATED]: {\n          profileId: 'profile_123',\n          profileName: 'Modo Reunião',\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.VOICEMAIL_RECEIVED]: {\n          phoneNumber: '(11) 98765-4321',\n          duration: 25,\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.APP_STATUS_CHANGED]: {\n          newStatus: 'active',\n          previousStatus: 'inactive',\n          timestamp: new Date().toISOString()\n        },\n        [EVENT_TYPES.CUSTOM]: {\n          message: 'Evento personalizado',\n          timestamp: new Date().toISOString()\n        }\n      }[eventType];\n      \n      const result = await webhookService.triggerEvent(eventType, payload);\n      \n      alert(`Evento disparado para ${result.length} webhook(s)`);\n      await loadData(); // Recarrega logs\n    } catch (error) {\n      console.error('Erro ao disparar evento:', error);\n      alert('Não foi possível disparar o evento.');\n    }\n  };\n\n  // Renderiza o status do webhook como badge\n  const renderStatusBadge = (status) => {\n    switch (status) {\n      case 'active':\n        return <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">Ativo</span>;\n      case 'inactive':\n        return <span className=\"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full\">Inativo</span>;\n      default:\n        return null;\n    }\n  };\n\n  // Renderiza o tipo de evento\n  const renderEventType = (type) => {\n    const typeMap = {\n      [EVENT_TYPES.CALL_BLOCKED]: 'Chamada Bloqueada',\n      [EVENT_TYPES.CALL_SILENCED]: 'Chamada Silenciada',\n      [EVENT_TYPES.RULE_TRIGGERED]: 'Regra Acionada',\n      [EVENT_TYPES.PROFILE_ACTIVATED]: 'Perfil Ativado',\n      [EVENT_TYPES.VOICEMAIL_RECEIVED]: 'Voicemail Recebido',\n      [EVENT_TYPES.APP_STATUS_CHANGED]: 'Status do App Alterado',\n      [EVENT_TYPES.CUSTOM]: 'Personalizado',\n      'all': 'Todos',\n      'test': 'Teste'\n    };\n    \n    return typeMap[type] || type;\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto space-y-6 p-4\">\n      <div className=\"bg-white rounded-paz shadow-paz p-6\">\n        <h2 className=\"text-2xl font-bold text-paz-blue-800 mb-2\">Integrações e Webhooks</h2>\n        <p className=\"text-gray-600 mb-6\">\n          Conecte o Quero Paz a outros serviços e plataformas para expandir suas funcionalidades.\n        </p>\n        \n        {/* Configuração rápida */}\n        <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n          <h3 className=\"font-medium text-lg mb-3\">Configuração Rápida</h3>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n              <select \n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-paz-blue-500 focus:border-paz-blue-500\"\n                value={selectedService}\n                onChange={(e) => setSelectedService(e.target.value)}\n              >\n                <option value=\"\">Selecione um serviço</option>\n                <option value=\"slack\">Slack</option>\n                <option value=\"discord\">Discord</option>\n                <option value=\"ifttt\">IFTTT</option>\n                <option value=\"zapier\">Zapier</option>\n              </select>\n              <input\n                type=\"text\"\n                placeholder={selectedService === 'slack' ? 'URL do webhook do Slack' : \n                             selectedService === 'discord' ? 'URL do webhook do Discord' :\n                             selectedService === 'ifttt' ? 'Chave do IFTTT' :\n                             selectedService === 'zapier' ? 'URL do webhook do Zapier' :\n                             'URL/Token do serviço'}\n                value={quickSetupUrl}\n                onChange={(e) => setQuickSetupUrl(e.target.value)}\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-paz-blue-500 focus:border-paz-blue-500\"\n              />\n              <button\n                onClick={handleQuickSetup}\n                disabled={!selectedService || !quickSetupUrl}\n                className=\"px-4 py-2 bg-paz-blue-600 text-white rounded-lg disabled:opacity-50 hover:bg-paz-blue-700 transition-colors whitespace-nowrap\"\n              >\n                Configurar\n              </button>\n            </div>\n            <p className=\"text-xs text-gray-500\">\n              {selectedService === 'slack' \n                ? 'Configure notificações para o Slack quando chamadas forem bloqueadas.' \n                : selectedService === 'discord'\n                ? 'Receba notificações no Discord sobre chamadas bloqueadas e voicemails.'\n                : selectedService === 'ifttt'\n                ? 'Use o IFTTT para criar automações com outros serviços quando eventos ocorrerem.'\n                : selectedService === 'zapier'\n                ? 'Integre com o Zapier para conectar com milhares de apps e serviços.'\n                : 'Selecione um serviço para realizar uma configuração rápida.'}\n            </p>\n          </div>\n        </div>\n        \n        {/* Lista de webhooks */}\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"font-medium text-lg\">Webhooks Configurados</h3>\n            <button\n              onClick={() => setShowAddForm(!showAddForm)}\n              className=\"px-3 py-2 bg-paz-blue-600 text-white rounded-lg hover:bg-paz-blue-700 transition-colors text-sm\"\n            >\n              {showAddForm ? 'Cancelar' : 'Adicionar Webhook'}\n            </button>\n          </div>\n          \n          {/* Formulário de adição */}\n          {showAddForm && (\n            <form onSubmit={handleAddWebhook} className=\"mb-6 p-4 border border-gray-200 rounded-lg\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Nome*\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={newWebhook.name}\n                    onChange={handleInputChange}\n                    placeholder=\"Ex: Notificações do Slack\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-paz-blue-500 focus:border-paz-blue-500\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    URL*\n                  </label>\n                  <input\n                    type=\"url\"\n                    name=\"url\"\n                    value={newWebhook.url}\n                    onChange={handleInputChange}\n                    placeholder=\"Ex: https://hooks.slack.com/services/...\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-paz-blue-500 focus:border-paz-blue-500\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tipos de Evento*\n                  </label>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {Object.values(EVENT_TYPES).map(type => (\n                      <div key={type} className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          id={`event-${type}`}\n                          value={type}\n                          checked={newWebhook.eventTypes.includes(type)}\n                          onChange={handleEventTypeChange}\n                          className=\"mr-2\"\n                        />\n                        <label htmlFor={`event-${type}`} className=\"text-sm\">\n                          {renderEventType(type)}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-paz-blue-600 text-white rounded-lg hover:bg-paz-blue-700 transition-colors\"\n                >\n                  Adicionar Webhook\n                </button>\n              </div>\n            </form>\n          )}\n          \n          {loading ? (\n            <div className=\"flex justify-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-paz-blue-600\"></div>\n            </div>\n          ) : webhooks.length > 0 ? (\n            <div className=\"space-y-4\">\n              {webhooks.map(webhook => (\n                <div \n                  key={webhook.id}\n                  className=\"p-4 bg-white rounded-lg border border-gray-200\"\n                >\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <div className=\"flex items-center\">\n                        <h4 className=\"font-medium\">{webhook.name}</h4>\n                        <div className=\"ml-2\">\n                          {renderStatusBadge(webhook.status)}\n                        </div>\n                      </div>\n                      <div className=\"text-sm text-gray-500 mt-1\">{webhook.url}</div>\n                      <div className=\"mt-2 flex flex-wrap gap-1\">\n                        {webhook.eventTypes.map(type => (\n                          <span key={type} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded\">\n                            {renderEventType(type)}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <div className=\"relative inline-block w-10 align-middle select-none\">\n                        <input \n                          type=\"checkbox\" \n                          id={`toggle-${webhook.id}`} \n                          checked={webhook.status === 'active'}\n                          onChange={() => handleToggleStatus(webhook.id)}\n                          className=\"sr-only peer\"\n                        />\n                        <label \n                          htmlFor={`toggle-${webhook.id}`}\n                          className=\"block h-6 overflow-hidden rounded-full bg-gray-300 cursor-pointer peer-checked:bg-paz-blue-600\"\n                        >\n                          <span className=\"absolute transform transition-transform duration-200 ease-in-out left-1 top-1 bg-white rounded-full h-4 w-4 peer-checked:translate-x-4\"></span>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-3 flex justify-end space-x-2\">\n                    <button\n                      onClick={() => handleTestWebhook(webhook.id)}\n                      className=\"px-3 py-1 text-sm bg-gray-100 text-gray-800 rounded hover:bg-gray-200 transition-colors\"\n                    >\n                      Testar\n                    </button>\n                    <button\n                      onClick={() => handleDeleteWebhook(webhook.id)}\n                      className=\"px-3 py-1 text-sm bg-red-100 text-red-800 rounded hover:bg-red-200 transition-colors\"\n                    >\n                      Excluir\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n              <p className=\"text-gray-500\">Nenhum webhook configurado</p>\n              <p className=\"text-sm text-gray-400 mt-1\">\n                Adicione webhooks para integrar com outros serviços\n              </p>\n            </div>\n          )}\n        </div>\n        \n        {/* Simulação de eventos */}\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-lg mb-3\">Simular Evento</h3>\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n            {Object.values(EVENT_TYPES).map(type => (\n              <button\n                key={type}\n                onClick={() => handleTriggerEvent(type)}\n                className=\"p-2 text-sm bg-gray-100 text-gray-800 rounded hover:bg-gray-200 transition-colors\"\n              >\n                {renderEventType(type)}\n              </button>\n            ))}\n          </div>\n        </div>\n        \n        {/* Logs */}\n        <div>\n          <div \n            className=\"flex justify-between items-center mb-2 cursor-pointer\"\n            onClick={() => setShowLogs(!showLogs)}\n          >\n            <h3 className=\"font-medium text-lg\">Logs de Webhooks</h3>\n            <svg \n              xmlns=\"http://www.w3.org/2000/svg\" \n              className={`h-5 w-5 transition-transform ${showLogs ? 'rotate-180' : ''}`} \n              fill=\"none\" \n              viewBox=\"0 0 24 24\" \n              stroke=\"currentColor\"\n            >\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </div>\n          \n          {showLogs && (\n            <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n              {logs.length > 0 ? (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Timestamp\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Evento\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {logs.map(log => (\n                        <tr key={log.id}>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(log.timestamp).toLocaleString()}\n                          </td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                            {renderEventType(log.eventType)}\n                          </td>\n                          <td className=\"px-4 py-2 whitespace-nowrap\">\n                            {log.success ? (\n                              <span className=\"px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full\">\n                                Sucesso\n                              </span>\n                            ) : (\n                              <span className=\"px-2 py-1 text-xs bg-red-100 text-red-800 rounded-full\">\n                                Falha\n                              </span>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"text-center py-4 text-gray-500\">\n                  Nenhum log disponível\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebhookPanel;\n"],"names":["EVENT_TYPES","MESSAGE_RECEIVED","MESSAGE_SENT","SYNC_COMPLETED","USER_ACTIVITY","PRIVACY_CHANGED","SECURITY_ALERT","APP_STATUS_CHANGED","CUSTOM","async","initialize","console","log","Promise","resolve","getWebhooks","addWebhook","webhook","_objectSpread","id","Date","now","toString","createdAt","toISOString","status","updateWebhook","webhookId","updates","deleteWebhook","triggerEvent","eventType","payload","concat","getLogs","clearLogs","testWebhook","success","error","timestamp","WebhookPanel","webhooks","setWebhooks","useState","logs","setLogs","loading","setLoading","showAddForm","setShowAddForm","selectedService","setSelectedService","quickSetupUrl","setQuickSetupUrl","newWebhook","setNewWebhook","name","url","eventTypes","headers","showLogs","setShowLogs","useEffect","webhookService","loadData","useCallback","webhooksList","logsList","all","handleInputChange","e","value","target","prev","handleEventTypeChange","checked","filter","type","renderStatusBadge","_jsx","className","children","renderEventType","CALL_BLOCKED","CALL_SILENCED","RULE_TRIGGERED","PROFILE_ACTIVATED","VOICEMAIL_RECEIVED","_jsxs","onChange","placeholder","onClick","quickSetup","alert","message","disabled","onSubmit","preventDefault","length","required","Object","values","map","includes","htmlFor","find","wh","newStatus","handleToggleStatus","result","handleTestWebhook","confirm","handleDeleteWebhook","phoneNumber","reason","ruleId","ruleName","profileId","profileName","duration","previousStatus","handleTriggerEvent","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","toLocaleString"],"sourceRoot":""}