{"version":3,"file":"static/js/337.f76fb4a7.chunk.js","mappings":"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","sources":["services/integration/voicemailService.js","components/integration/VoicemailPanel.jsx"],"sourcesContent":["/**\n * Serviço de Voicemail para o Quero Paz\n * \n * NOTA: FUNCIONALIDADE FUTURA\n * Este módulo será implementado em uma versão posterior e está desativado\n * para os testes iniciais. O serviço de voicemail permitirá o gerenciamento \n * de mensagens de voz com funcionalidades como:\n * - Armazenamento seguro de mensagens\n * - Transcrição automática de áudio para texto\n * - Categorização e priorização de mensagens\n * - Notificações de novas mensagens\n */\n\n// Status das mensagens para compatibilidade com componentes existentes\nexport const MESSAGE_TYPES = {\n  NEW: 'new',\n  READ: 'read',\n  ARCHIVED: 'archived',\n  DELETED: 'deleted'\n};\n\n// Níveis de urgência\nexport const URGENCY_LEVELS = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n  EMERGENCY: 'emergency'\n};\n\n// Categorias de sentimento\nexport const SENTIMENT_TYPES = {\n  NEGATIVE: 'negative',\n  NEUTRAL: 'neutral',\n  POSITIVE: 'positive'\n};\n\n/**\n * Serviço de gerenciamento de voicemail - Desativado para testes iniciais\n * V1.0 - Terá apenas funcionalidades básicas\n */\nconst voicemailService = {\n  /**\n   * Inicializa o serviço (atualmente desativado)\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    console.log('[INFO] Serviço de voicemail estará disponível em uma versão futura');\n    return Promise.resolve();\n  },\n  \n  /**\n   * Obtém todas as mensagens de voicemail (atualmente retorna lista vazia)\n   * @returns {Promise<Array>} Lista de mensagens\n   */\n  async getMessages() {\n    return Promise.resolve([]);\n  },\n  \n  /**\n   * Obtém a configuração do voicemail\n   * @returns {Promise<Object>} Configuração\n   */\n  async getConfig() {\n    return Promise.resolve({\n      transcriptionEnabled: false,\n      sentimentAnalysisEnabled: false,\n      autoDeleteAfterDays: 30,\n      notifyOnTranscription: false,\n      language: 'pt-BR'\n    });\n  },\n  \n  /**\n   * Atualiza a configuração do voicemail (desativado)\n   * @param {Object} newConfig - Nova configuração\n   * @returns {Promise<Object>} Configuração\n   */\n  async updateConfig(newConfig) {\n    console.log('[INFO] Atualização de configuração não disponível nesta versão');\n    return this.getConfig();\n  },\n  \n  /**\n   * Adiciona uma nova mensagem (desativado)\n   * @returns {Promise<Object>} Mensagem (vazia)\n   */\n  async addMessage() {\n    console.log('[INFO] Adição de mensagens não disponível nesta versão');\n    return Promise.resolve({});\n  },\n  \n  /**\n   * Marca uma mensagem como lida (desativado)\n   * @returns {Promise<boolean>} Sucesso da operação\n   */\n  async markAsRead() {\n    console.log('[INFO] Marcação de mensagens não disponível nesta versão');\n    return Promise.resolve(true);\n  },\n  \n  /**\n   * Arquiva uma mensagem (desativado)\n   * @returns {Promise<boolean>} Sucesso da operação\n   */\n  async archiveMessage() {\n    console.log('[INFO] Arquivamento de mensagens não disponível nesta versão');\n    return Promise.resolve(true);\n  },\n  \n  /**\n   * Deleta uma mensagem (desativado)\n   * @returns {Promise<boolean>} Sucesso da operação\n   */\n  async deleteMessage() {\n    console.log('[INFO] Deleção de mensagens não disponível nesta versão');\n    return Promise.resolve(true);\n  }\n};\n\nexport default voicemailService;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport voicemailService, { MESSAGE_TYPES, URGENCY_LEVELS, SENTIMENT_TYPES } from '../../services/integration/voicemailService';\n\n/**\n * Painel de gerenciamento de voicemail e transcrição\n */\nconst VoicemailPanel = () => {\n  const [messages, setMessages] = useState([]);\n  const [config, setConfig] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [activeTab, setActiveTab] = useState('all');\n  const [expandedMessage, setExpandedMessage] = useState(null);\n\n  // Inicializa o componente\n  useEffect(() => {\n    const initialize = async () => {\n      await voicemailService.initialize();\n      await loadData();\n    };\n    initialize();\n  }, []);\n\n  // Carrega dados de mensagens e configuração\n  const loadData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [messagesList, configData] = await Promise.all([\n        voicemailService.getMessages(),\n        voicemailService.getConfig()\n      ]);\n      \n      setMessages(messagesList);\n      setConfig(configData);\n    } catch (error) {\n      console.error('Erro ao carregar dados de voicemail:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Atualiza configuração\n  const updateConfiguration = async (key, value) => {\n    try {\n      const updatedConfig = await voicemailService.updateConfig({ [key]: value });\n      setConfig(updatedConfig);\n    } catch (error) {\n      console.error('Erro ao atualizar configuração:', error);\n      alert('Não foi possível atualizar a configuração.');\n    }\n  };\n\n  // Transcreve uma mensagem\n  const handleTranscribe = async (messageId) => {\n    setProcessing(true);\n    try {\n      const result = await voicemailService.transcribeVoicemail(messageId);\n      \n      if (result.success) {\n        await loadData(); // Recarrega os dados\n      } else {\n        alert(`Erro na transcrição: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Erro durante transcrição:', error);\n      alert('Ocorreu um erro durante a transcrição da mensagem.');\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  // Marca mensagem como lida\n  const handleMarkAsRead = async (messageId) => {\n    try {\n      await voicemailService.markAsRead(messageId);\n      await loadData(); // Recarrega os dados\n    } catch (error) {\n      console.error('Erro ao marcar mensagem como lida:', error);\n    }\n  };\n\n  // Exclui mensagem\n  const handleDeleteMessage = async (messageId) => {\n    if (!confirm('Tem certeza que deseja excluir esta mensagem?')) return;\n    \n    try {\n      await voicemailService.deleteMessage(messageId);\n      await loadData(); // Recarrega os dados\n    } catch (error) {\n      console.error('Erro ao excluir mensagem:', error);\n      alert('Não foi possível excluir a mensagem.');\n    }\n  };\n\n  // Simula uma chamada perdida (apenas para demonstração)\n  const handleSimulateMissedCall = async () => {\n    try {\n      await voicemailService.simulateMissedCall('(11) 98765-4321', 'João Silva');\n      await loadData(); // Recarrega os dados\n    } catch (error) {\n      console.error('Erro ao simular chamada perdida:', error);\n    }\n  };\n\n  // Simula recebimento de voicemail (apenas para demonstração)\n  const handleSimulateVoicemail = async () => {\n    try {\n      await voicemailService.simulateVoicemail('(11) 98765-4321', 'João Silva', 25);\n      await loadData(); // Recarrega os dados\n    } catch (error) {\n      console.error('Erro ao simular voicemail:', error);\n    }\n  };\n\n  // Filtra mensagens baseado na aba ativa\n  const filteredMessages = messages.filter(message => {\n    if (activeTab === 'all') return true;\n    if (activeTab === 'voicemail') return message.type === MESSAGE_TYPES.VOICEMAIL;\n    if (activeTab === 'transcribed') return message.type === MESSAGE_TYPES.TRANSCRIBED;\n    if (activeTab === 'missed') return message.type === MESSAGE_TYPES.MISSED_CALL;\n    return true;\n  });\n\n  // Renderiza o nível de urgência\n  const renderUrgencyBadge = (level) => {\n    switch (level) {\n      case URGENCY_LEVELS.LOW:\n        return <span className=\"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full\">Baixa</span>;\n      case URGENCY_LEVELS.MEDIUM:\n        return <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">Média</span>;\n      case URGENCY_LEVELS.HIGH:\n        return <span className=\"bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full\">Alta</span>;\n      case URGENCY_LEVELS.EMERGENCY:\n        return <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full\">Urgente</span>;\n      default:\n        return null;\n    }\n  };\n\n  // Renderiza o sentimento\n  const renderSentimentBadge = (sentiment) => {\n    switch (sentiment) {\n      case SENTIMENT_TYPES.POSITIVE:\n        return <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">Positivo</span>;\n      case SENTIMENT_TYPES.NEGATIVE:\n        return <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full\">Negativo</span>;\n      case SENTIMENT_TYPES.NEUTRAL:\n        return <span className=\"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full\">Neutro</span>;\n      default:\n        return null;\n    }\n  };\n\n  // Renderiza ícone para o tipo de mensagem\n  const renderMessageIcon = (message) => {\n    switch (message.type) {\n      case MESSAGE_TYPES.MISSED_CALL:\n        return <span className=\"text-lg\">📞</span>;\n      case MESSAGE_TYPES.VOICEMAIL:\n        return <span className=\"text-lg\">🔊</span>;\n      case MESSAGE_TYPES.TRANSCRIBED:\n        return <span className=\"text-lg\">📝</span>;\n      default:\n        return <span className=\"text-lg\">✉️</span>;\n    }\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto space-y-6 p-4\">\n      <div className=\"bg-white rounded-paz shadow-paz p-6\">\n        <h2 className=\"text-2xl font-bold text-paz-blue-800 mb-2\">Gerenciamento de Voicemail</h2>\n        <p className=\"text-gray-600 mb-6\">\n          Transcreva seus voicemails para texto e gerencie mensagens de chamadas perdidas.\n        </p>\n        \n        {/* Configurações */}\n        <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n          <h3 className=\"font-medium text-lg mb-3\">Configurações</h3>\n          \n          {loading ? (\n            <div className=\"flex justify-center py-4\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-paz-blue-600\"></div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"mr-3 bg-paz-blue-100 p-2 rounded-lg\">\n                    <span className=\"text-lg\">📝</span>\n                  </div>\n                  <span>Ativar transcrição automática</span>\n                </div>\n                <div className=\"relative inline-block w-10 align-middle select-none\">\n                  <input \n                    type=\"checkbox\" \n                    id=\"toggle-transcription\" \n                    checked={config?.transcriptionEnabled || false}\n                    onChange={() => updateConfiguration('transcriptionEnabled', !config?.transcriptionEnabled)}\n                    className=\"sr-only peer\"\n                  />\n                  <label \n                    htmlFor=\"toggle-transcription\"\n                    className=\"block h-6 overflow-hidden rounded-full bg-gray-300 cursor-pointer peer-checked:bg-paz-blue-600\"\n                  >\n                    <span className=\"absolute transform transition-transform duration-200 ease-in-out left-1 top-1 bg-white rounded-full h-4 w-4 peer-checked:translate-x-4\"></span>\n                  </label>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"mr-3 bg-green-100 p-2 rounded-lg\">\n                    <span className=\"text-lg\">😀</span>\n                  </div>\n                  <span>Análise de sentimento</span>\n                </div>\n                <div className=\"relative inline-block w-10 align-middle select-none\">\n                  <input \n                    type=\"checkbox\" \n                    id=\"toggle-sentiment\" \n                    checked={config?.sentimentAnalysisEnabled || false}\n                    onChange={() => updateConfiguration('sentimentAnalysisEnabled', !config?.sentimentAnalysisEnabled)}\n                    className=\"sr-only peer\"\n                  />\n                  <label \n                    htmlFor=\"toggle-sentiment\"\n                    className=\"block h-6 overflow-hidden rounded-full bg-gray-300 cursor-pointer peer-checked:bg-paz-blue-600\"\n                  >\n                    <span className=\"absolute transform transition-transform duration-200 ease-in-out left-1 top-1 bg-white rounded-full h-4 w-4 peer-checked:translate-x-4\"></span>\n                  </label>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"mr-3 bg-yellow-100 p-2 rounded-lg\">\n                    <span className=\"text-lg\">🔔</span>\n                  </div>\n                  <span>Notificar após transcrição</span>\n                </div>\n                <div className=\"relative inline-block w-10 align-middle select-none\">\n                  <input \n                    type=\"checkbox\" \n                    id=\"toggle-notify\" \n                    checked={config?.notifyOnTranscription || false}\n                    onChange={() => updateConfiguration('notifyOnTranscription', !config?.notifyOnTranscription)}\n                    className=\"sr-only peer\"\n                  />\n                  <label \n                    htmlFor=\"toggle-notify\"\n                    className=\"block h-6 overflow-hidden rounded-full bg-gray-300 cursor-pointer peer-checked:bg-paz-blue-600\"\n                  >\n                    <span className=\"absolute transform transition-transform duration-200 ease-in-out left-1 top-1 bg-white rounded-full h-4 w-4 peer-checked:translate-x-4\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Tabs de mensagens */}\n        <div className=\"mb-4 border-b border-gray-200\">\n          <ul className=\"flex flex-wrap -mb-px\">\n            <li className=\"mr-2\">\n              <button\n                onClick={() => setActiveTab('all')}\n                className={`inline-block py-2 px-4 text-sm font-medium ${\n                  activeTab === 'all'\n                    ? 'text-paz-blue-600 border-b-2 border-paz-blue-600'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Todas ({messages.length})\n              </button>\n            </li>\n            <li className=\"mr-2\">\n              <button\n                onClick={() => setActiveTab('voicemail')}\n                className={`inline-block py-2 px-4 text-sm font-medium ${\n                  activeTab === 'voicemail'\n                    ? 'text-paz-blue-600 border-b-2 border-paz-blue-600'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Voicemail\n              </button>\n            </li>\n            <li className=\"mr-2\">\n              <button\n                onClick={() => setActiveTab('transcribed')}\n                className={`inline-block py-2 px-4 text-sm font-medium ${\n                  activeTab === 'transcribed'\n                    ? 'text-paz-blue-600 border-b-2 border-paz-blue-600'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Transcritas\n              </button>\n            </li>\n            <li>\n              <button\n                onClick={() => setActiveTab('missed')}\n                className={`inline-block py-2 px-4 text-sm font-medium ${\n                  activeTab === 'missed'\n                    ? 'text-paz-blue-600 border-b-2 border-paz-blue-600'\n                    : 'text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                Chamadas Perdidas\n              </button>\n            </li>\n          </ul>\n        </div>\n        \n        {/* Lista de mensagens */}\n        {loading ? (\n          <div className=\"flex justify-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-paz-blue-600\"></div>\n          </div>\n        ) : filteredMessages.length > 0 ? (\n          <div className=\"space-y-4\">\n            {filteredMessages.map(message => (\n              <div \n                key={message.id}\n                className={`p-4 rounded-lg border ${\n                  message.status === 'new' \n                    ? 'border-paz-blue-200 bg-paz-blue-50' \n                    : 'border-gray-200 bg-white'\n                }`}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex items-start\">\n                    <div className=\"mr-3 mt-1\">\n                      {renderMessageIcon(message)}\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">{message.callerName || message.phoneNumber}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {message.phoneNumber}\n                        {message.duration > 0 && ` • ${message.duration}s`}\n                        {message.timestamp && ` • ${new Date(message.timestamp).toLocaleString()}`}\n                      </div>\n                      \n                      {message.type === MESSAGE_TYPES.TRANSCRIBED && (\n                        <div className=\"mt-2 flex flex-wrap gap-2\">\n                          {message.urgency && renderUrgencyBadge(message.urgency)}\n                          {message.sentiment && renderSentimentBadge(message.sentiment)}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div>\n                    {message.type === MESSAGE_TYPES.VOICEMAIL && (\n                      <button\n                        onClick={() => handleTranscribe(message.id)}\n                        disabled={processing}\n                        className=\"text-sm text-paz-blue-600 hover:text-paz-blue-800 disabled:text-gray-400\"\n                      >\n                        {processing ? 'Transcrevendo...' : 'Transcrever'}\n                      </button>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Transcrição expandida */}\n                {message.type === MESSAGE_TYPES.TRANSCRIBED && (\n                  <div className=\"mt-3\">\n                    <div \n                      className={`bg-white rounded-lg p-3 border border-gray-200 ${\n                        expandedMessage === message.id ? '' : 'line-clamp-2'\n                      }`}\n                    >\n                      {message.transcription}\n                    </div>\n                    <button\n                      onClick={() => setExpandedMessage(expandedMessage === message.id ? null : message.id)}\n                      className=\"text-sm text-gray-500 hover:text-gray-700 mt-1\"\n                    >\n                      {expandedMessage === message.id ? 'Ver menos' : 'Ver mais'}\n                    </button>\n                  </div>\n                )}\n                \n                {/* Ações */}\n                <div className=\"mt-3 flex justify-end space-x-2\">\n                  {message.status === 'new' && (\n                    <button\n                      onClick={() => handleMarkAsRead(message.id)}\n                      className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800\"\n                    >\n                      Marcar como lido\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDeleteMessage(message.id)}\n                    className=\"px-3 py-1 text-sm text-red-600 hover:text-red-800\"\n                  >\n                    Excluir\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12 bg-gray-50 rounded-lg\">\n            <p className=\"text-gray-500\">Nenhuma mensagem encontrada</p>\n            <div className=\"mt-4 flex justify-center space-x-3\">\n              <button\n                onClick={handleSimulateMissedCall}\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors\"\n              >\n                Simular Chamada Perdida\n              </button>\n              <button\n                onClick={handleSimulateVoicemail}\n                className=\"px-4 py-2 bg-paz-blue-600 text-white rounded-lg hover:bg-paz-blue-700 transition-colors\"\n              >\n                Simular Voicemail\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VoicemailPanel;\n"],"names":["MESSAGE_TYPES","NEW","READ","ARCHIVED","DELETED","URGENCY_LEVELS","SENTIMENT_TYPES","async","initialize","console","log","Promise","resolve","getMessages","getConfig","transcriptionEnabled","sentimentAnalysisEnabled","autoDeleteAfterDays","notifyOnTranscription","language","updateConfig","newConfig","this","addMessage","markAsRead","archiveMessage","deleteMessage","VoicemailPanel","messages","setMessages","useState","config","setConfig","loading","setLoading","processing","setProcessing","activeTab","setActiveTab","expandedMessage","setExpandedMessage","useEffect","voicemailService","loadData","useCallback","messagesList","configData","all","error","updateConfiguration","key","value","updatedConfig","alert","filteredMessages","filter","message","type","VOICEMAIL","TRANSCRIBED","MISSED_CALL","renderUrgencyBadge","level","_jsx","className","children","renderSentimentBadge","sentiment","renderMessageIcon","_jsxs","id","checked","onChange","htmlFor","onClick","concat","length","map","status","callerName","phoneNumber","duration","timestamp","Date","toLocaleString","urgency","result","transcribeVoicemail","messageId","success","handleTranscribe","disabled","transcription","handleMarkAsRead","confirm","handleDeleteMessage","simulateMissedCall","simulateVoicemail"],"sourceRoot":""}